[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "The International Civil Service Effectiveness Project",
    "section": "",
    "text": "Plot = import(\"https://cdn.jsdelivr.net/npm/@observablehq/plot@0.6.14/+esm\");\nimport { aq, op } from \"https://cdn.jsdelivr.net/npm/arquero@5.4.0/+esm\"\n\n/* source data*/\nradar_data = FileAttachment(\"data/radar_data.csv\").csv({ \"typed\": true });\nradar_grid = FileAttachment(\"data/radar_grid.csv\").csv({ \"typed\": true });\nradar_axes = FileAttachment(\"data/radar_axes.csv\").csv({ \"typed\": true });\noutput_table = FileAttachment(\"data/incise2019_full_output.csv\").csv({ \"typed\": true });\nnarrative_data = FileAttachment(\"data/country_narratives.csv\").csv({ \"typed\": true });\n\n/* country selectors */\ncountry_codes =  [\n  \"AUS\", \"AUT\", \"BEL\", \"BGR\", \"CAN\", \"CHL\", \"HRV\", \"CZE\", \"DNK\", \"EST\", \"FIN\",\n  \"FRA\", \"DEU\", \"GRC\", \"HUN\", \"ISL\", \"IRL\", \"ISR\", \"ITA\", \"JPN\", \"LVA\", \"LTU\",\n  \"MEX\", \"NLD\", \"NZL\", \"NOR\", \"POL\", \"PRT\", \"ROU\", \"SVK\", \"SVN\", \"KOR\", \"ESP\",\n  \"SWE\", \"CHE\", \"TUR\", \"GBR\", \"USA\"\n];\n\ncountries = [\n  \"Australia\", \"Austria\", \"Belgium\", \"Bulgaria\", \"Canada\", \"Chile\", \"Croatia\",\n  \"Czechia\", \"Denmark\", \"Estonia\", \"Finland\", \"France\", \"Germany\", \"Greece\",\n  \"Hungary\", \"Iceland\", \"Ireland\", \"Israel\", \"Italy\", \"Japan\", \"Latvia\",\n  \"Lithuania\", \"Mexico\", \"Netherlands\", \"New Zealand\", \"Norway\", \"Poland\",\n  \"Portugal\", \"Romania\",  \"Slovakia\",  \"Slovenia\", \"South Korea\", \"Spain\",\n  \"Sweden\", \"Switzerland\", \"Turkey\", \"United Kingdom\",\n  \"United States of America\"\n];\n\n/* country selectors */\nbar_vars =  [\n  \"incise_index\", \"ind_cap\", \"ind_crm\", \"ind_dig\", \"ind_ffm\", \"ind_hrm\",\n  \"ind_inc\", \"ind_int\", \"ind_opn\", \"ind_pol\", \"ind_pro\", \"ind_reg\", \"ind_tax\"\n];\n\nradar_groups =  [\n  \"0_indicators\", \"cap\", \"crm\", \"dig\", \"ffm\", \"hrm\", \"inc\", \"int\", \"opn\",\n  \"pol\", \"pro\", \"reg\", \"tax\"\n];\n\nindicators = [\n  \"InCiSE Index\", \"Capabilities\", \"Crisis and risk management\",\n  \"Digital services\", \"Fiscal and financial management\", \"HR management\",\n  \"Inclusiveness\", \"Integrity\", \"Openness\", \"Policy making\", \"Procurement\",\n  \"Regulation\", \"Tax administration\"\n];\n\n/* methodology pages */\nmethod_pages = [\n  \"https://incise-project.github.io/incise2019-techreport/02_index.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_03_capabilities.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_08_crisis_risk.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_12_digital.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_06_fiscal_financial.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_10_hrm.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_04_inclusiveness.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_01_integrity.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_02_openness.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_05_policy_making.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_09_procurement.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_07_regulation.html\",\n  \"https://incise-project.github.io/incise2019-techreport/03_11_tax.html\"\n];\n\nmethod_labels = [\n  \"calculation of the InCiSE Index\",\n  \"source data and calculation of the Capabilities indicator\",\n  \"source data and calculation of the Crisis and risk management indicator\",\n  \"source data and calculation of the Digital services indicator\",\n  \"source data and calculation of the Fiscal and financial management indicator\",\n  \"source data and calculation of the HR management indicator\",\n  \"source data and calculation of the Inclusiveness indicator\",\n  \"source data and calculation of the Integrity indicator\",\n  \"source data and calculation of the Openness indicator\",\n  \"source data and calculation of the Policy making indicator\",\n  \"source data and calculation of the Procurement indicator\",\n  \"source data and calculation of the Regulation indicator\",\n  \"source data and calculation of the Tax administration indicator\"\n];\n\n\nbar_data = radar_data.filter(function(df) {\n  return my_bar == df.metric;\n});\n\nincise_bar = bar_data.filter(function(df) {\n  return \"InCiSE\" == df.cc_iso3c;\n});\n\ncountry_bar = bar_data.filter(function(df) {\n  return my_country == df.cc_iso3c;\n});\n\nincise_radar = radar_data.filter(function(df) {\n  return my_radar == df.group && \"InCiSE\" == df.cc_iso3c;\n});\n\ncountry_radar = radar_data.filter(function(df) {\n  return my_radar == df.group && my_country == df.cc_iso3c;\n});\n\ncountry_points = country_radar.filter(function(df) {\n  return df.value != null\n});\n\ncountry_imputed = country_radar.filter(function(df) {\n  return df.imputed != null\n});\n\nmy_grid = radar_grid.filter(function(df) {\n  return my_radar == df.group\n});\n\nmy_axes = radar_axes.filter(function(df) {\n  return my_radar == df.group\n});\n\nmy_narrative = narrative_data.filter(function(df){\n  return my_country == df.cc_iso3c\n})[0];\n\ncountry_table = output_table.filter(function(df) {\n  return  my_country == df.cc_iso3c && (my_radar == df.group || my_bar == df.metric)\n});\n\nset_val = function(input, value) {\n  input.value = value;\n  input.dispatchEvent(new Event(\"input\"))\n};\n\nbar_plot.addEventListener(\"mousedown\", (event) =&gt; {\n  if (bar_plot.value != null) {\n    if (bar_plot.value.cc_iso3c == \"InCiSE\") {\n      return null\n    }\n    var sel_country = countries[country_codes.indexOf(bar_plot.value.cc_iso3c)]\n    set_val(viewof usr_country, sel_country)\n  }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nset_val(viewof usr_country, countries[Math.floor(Math.random()*38)])\n\n\n\n\n\n\n\nmy_bar = bar_vars[indicators.indexOf(usr_indicator)];\nmy_radar = radar_groups[indicators.indexOf(usr_indicator)];\nmy_country = country_codes[countries.indexOf(usr_country)];\nmy_method = method_pages[indicators.indexOf(usr_indicator)];\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nviewof usr_country = Inputs.select(\n  countries,\n  {label: \"Select a country:\", unique: true}\n);\n\n\n\n\n\n\n\n\n\n\n\nhtml`\n  &lt;p class=\"lead\"&gt;${my_narrative.lead_text}&lt;/p&gt;\n  &lt;p&gt;${my_narrative.body_text}&lt;/p&gt;\n`\n\n\n\n\n\n\n\n\n\n\n\nviewof usr_indicator = Inputs.select(\n  indicators,\n  {label: \"Select an indicator:\", unique: true}\n);\n\n\n\n\n\n\n\n\nChartDataAbout\n\n\n\nhtml`&lt;strong&gt;${usr_country}: ${usr_indicator}&lt;/strong&gt;`\n\n\n\n\n\n\n\n\n\nbar_plot = Plot.plot({\n  width: 300,\n  height: 600,\n  marginLeft: 75,\n  style: {fontSize: 13},\n  x: {label: null, grid: true, domain: [0, 1.4]},\n  y: {label: null},\n  marks: [\n    Plot.barX(bar_data, {\n      x: \"raw_value\",\n      y: \"cc_iso3c\",\n      sort: {y: \"x\", reverse: true},\n      fill: \"#dddddd\"\n    }),\n    Plot.barX(incise_bar, {\n      x: \"raw_value\",\n      y: \"cc_iso3c\",\n      sort: {y: \"x\", reverse: true},\n      fill: \"#C4622D\"\n    }),\n    Plot.barX(country_bar, {\n      x: \"raw_value\",\n      y: \"cc_iso3c\",\n      sort: {y: \"x\", reverse: true},\n      fill: \"#00629B\"\n    }),\n    Plot.text(incise_bar, {\n      x: (d) =&gt; d.value + 0.05,\n      y: \"cc_iso3c\",\n      text: \"data_label\",\n      fill: \"#C4622D\",\n      fontWeight: \"600\",\n      textAnchor: \"start\",\n      sort: {y: \"x\", reverse: true}\n    }),\n    Plot.text(country_bar, {\n      x: (d) =&gt; d.value + 0.05,\n      y: \"cc_iso3c\",\n      text: \"data_label\",\n      fill: \"#00629B\",\n      fontWeight: \"600\",\n      textAnchor: \"start\",\n      sort: {y: \"x\", reverse: true}\n    }),\n    Plot.tip(bar_data,\n      Plot.pointerY({\n        x: \"raw_value\",\n        y: \"cc_iso3c\",\n        filter: (d) =&gt; d.hover_label,\n        title: (d) =&gt; d.hover_label,\n        frameAnchor: \"left\"\n      })\n    )\n  ]\n});\n\n\n\n\n\n\n\n\n\n\nchart_curve = \"catmull-rom-closed\"\n\nradar_plot = Plot.plot({\n  width: 600,\n  height: 600,\n  style: {fontSize: 13},\n  x: {domain: [-1.5, 1.5], label: \"\", axis: null},\n  y: {domain: [-1.5, 1.5], label: \"\", axis: null},\n  marks: [\n    Plot.line(my_grid, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      z: \"value\",\n      stroke: \"#dddddd\",\n      curve: chart_curve\n    }),\n    Plot.link(my_axes, {\n      x1: 0,\n      y1: 0,\n      x2: \"axis_x\",\n      y2: \"axis_y\",\n      z: \"metric\",\n      stroke: \"#dddddd\",\n      curve: \"linear\"\n    }),\n    Plot.line(incise_radar, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      stroke: \"#C4622D\",\n      strokeWidth: 2,\n      curve: chart_curve\n    }),\n    Plot.dot(incise_radar, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      fill: \"#C4622D\",\n      symbol: \"circle-stroke\",\n      strokeWidth: 2\n    }),\n    Plot.line(country_radar, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      stroke: \"#00629B\",\n      strokeWidth: 2,\n      curve: chart_curve\n    }),\n    Plot.dot(country_points, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      radius: 3,\n      fill: \"#00629B\",\n      stroke: \"#00629B\",\n      symbol: \"circle-stroke\",\n      strokeWidth: 2\n    }),\n    Plot.dot(country_imputed, {\n      x: \"radar_x\",\n      y: \"radar_y\",\n      radius: 3,\n      stroke: \"#00629B\",\n      fill: \"#ffffff\",\n      symbol: \"circle-stroke\",\n      strokeWidth: 2\n    }),\n    Plot.text(my_axes, {\n      x: \"label_x\",\n      y: \"label_y\",\n      text: \"label\",\n      lineWidth: 15\n    }),\n    Plot.tip(country_radar,\n      Plot.pointer({\n        x: \"radar_x\",\n        y: \"radar_y\",\n        filter: (d) =&gt; d.hover_label,\n        title: (d) =&gt; d.hover_label\n      })\n    )\n  ]\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmobile_plot = Plot.plot({\n  width: 400,\n  height: 600,\n  marginLeft: 200,\n  style: {fontSize: 13},\n  x: {label: null, grid: true, domain: [0, 1]},\n  y: {axis: null},\n  marks: [\n    Plot.ruleY(incise_radar, {\n      y: \"label\",\n      stroke: \"#eeeeee\",\n      strokeWidth: 10\n    }),\n    Plot.text(incise_radar, {\n      x: \"value\",\n      y: \"label\",\n      fill: \"#C4622D\",\n      text: (d) =&gt; \"\\u2503\",\n      fontSize: 16,\n      fontWeight: 800\n    }),\n    Plot.dot(country_radar, {\n      x: \"value\",\n      y: \"label\",\n      radius: 2,\n      fill: \"#00629B\",\n      stroke: \"#00629B\",\n      symbol: \"circle-stroke\",\n      strokeWidth: 2\n    }),\n    Plot.dot(country_radar, {\n      x: \"imputed\",\n      y: \"label\",\n      radius: 2,\n      stroke: \"#00629B\",\n      fill: \"#ffffff\",\n      symbol: \"circle-stroke\",\n      strokeWidth: 2\n    }),\n    Plot.text(country_radar, {\n      x: -0.05,\n      y: \"label\",\n      text: \"label\",\n      frameAnchor: \"right\",\n      lineWidth: 15\n    }),\n    Plot.tip(country_radar,\n      Plot.pointer({\n        x: \"raw_value\",\n        y: \"label\",\n        filter: (d) =&gt; d.hover_label,\n        title: (d) =&gt; d.hover_label,\n        frameAnchor: \"left\"\n      })\n    )\n  ]\n});\n\n\n\n\n\n\n\n\n\n\n\n\nhtml`&lt;strong&gt;${usr_country}: ${usr_indicator}&lt;/strong&gt;`\n\n\n\n\n\n\n\nInputs.table(country_table, {\n  columns: [\"cc_iso3c\", \"label\", \"value\", \"imputed\", \"incise_average\"],\n  header: {\n    cc_iso3c: \"Country\",\n    label: \"Metric\",\n    value: \"Country score\",\n    imputed: \"Imputed\",\n    incise_average: \"InCiSE average\"\n  },\n  sort: \"sort_order\",\n  rows: 20\n})\n\n\n\n\n\n\n\nhtml`\n  &lt;div style=\"margin-top:1.5rem\"&gt;\n  &lt;p&gt;\n    Full details of the methodology for the 2019 InCiSE Index are available\n    in the\n    &lt;a href=\"http://incise-project.github.io/incise2019-techreport/\"&gt;\n      Technical Report&lt;/a&gt;, specific details about the\n      ${method_labels[indicators.indexOf(usr_indicator)]}\n    can be found &lt;a href=\"${my_method}\"&gt;here&lt;/a&gt;.\n  &lt;/p&gt;\n  &lt;p&gt;\n  Download the full InCiSE 2019 results as a\n  &lt;a href=\"data/incise2019_full_output.csv\" download&gt;CSV file (681KB)&lt;/a&gt;.\n  &lt;/p&gt;\n  &lt;/div&gt;\n`\n\n\n\n\n\n\n\n\n\nThis dashboard accompanies the InCiSE 2019 Results Report and Technical Report and provides an interactive tool for exploring the full results of the InCiSE Index and its constituent Indicators.\n\nHow to use the dashboard\nThe dashboard provide a “chart” and “data” view for the selected country and indicator. In the chart view you will see two charts, a bar chart showing the selected country’s score for the InCiSE Index or the selected Indicator, and a radar chart showing the scores of the components that make up the Index or Indicator score. The selected country’s score is shown in blue, and the InCiSE average is shown in orange. When viewing on a mobile the radar chart is rendered as a dot plot where each Indicator/metric is shown on a separate line.\nThe data table provides a table of the selected results, the full dataset is also available to download as a CSV file (681KB).\nWhen you first load (or refresh the page) the dashboard it will select a country random. You can change the country selection by either using the dropdown menu at the top of the page or by selecting the country’s bar in the bar chart.\nOn first load the dashboard will show the results for the InCiSE Index, use the drop-down menu to select an Indicator to show the overall results for that Indicator and the scores of the metrics that contribute to the Indicator.\n\n\nAbout the project\nFrom 2016 to 2019, the International Civil Service Effectiveness (InCiSE) project was a collaboration between the Blavatnik School of Government and the Institute for Government. It was supported by the UK Civil Service (through the Cabinet Office) and funded by the Open Society Foundations.\nThe Blavatnik School of Government is re-establishing the InCiSE project with the aim of publishing a new edition of the Index in 2024. To support engagement with stakeholders the School is re-publishing the 2019 project outputs (this results dashboard, the Results Report, and the Technical Report) in more modern and user friendly formats.\n\n\nAccessibility\nThis dashboard has been built using Quarto and Observable Plot and may not be fully accessible. You can read non-interactive summaries of the overall InCiSE results and country results in the appendices to the republished InCiSE 2019 Results Report.\n\n\nPrivacy\nThis site does not use cookies or store any information on your computer, nor do we track or retain any personal data about you."
  }
]